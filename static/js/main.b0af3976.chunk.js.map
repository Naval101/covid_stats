{"version":3,"sources":["News.js","Infobox.js","Table.js","MyMap.js","Chart.js","Stats.js","symptoms.jpg","prevention.jpg","treatment.jpg","Info.js","App.js","index.js"],"names":["News","useState","dataNews","setDataNews","useEffect","fetch","then","response","json","data","articles","className","map","src","urlToImage","href","url","title","content","source","name","publishedAt","Infobox","total","today","numeral","format","Table","tableInfo","corona","columns","dataField","text","sort","formatter","cell","casesObj","deathsObj","recoveredObj","classes","keyField","MyMap","center","zoom","redOptions","color","fillColor","fillOpacity","MapContainer","scrollWheelZoom","TileLayer","attribution","country","Circle","countryInfo","lat","long","pathOptions","radius","Math","sqrt","cases","Popup","deaths","recovered","Chart","dataCountry","xCases","yCases","xDeaths","yDeaths","date","push","width","height","labels","datasets","label","backgroundColor","Stats","countries","setCountries","setCountryinfo","tableData","setTableData","mapData","setMapData","mapCenter","mapZoom","setMapZoom","chartData","setChartData","countryChart","setCountryChart","countryUrl","setCountryUrl","periodeUrl","setPeriodeUrl","onPeriodChange","evt","a","periode","target","value","url2","timeline","onCountryChange","onChange","todayCases","todayRecovered","todayDeaths","Info","sypt","style","prevent","treat","App","to","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0af3976.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport \"./News.css\";\r\n\r\nfunction News() {\r\n    const [dataNews,setDataNews] = useState([]);\r\n    const apikey= \"f54c8955538e4cf29efa2003b9fc9ef0\";\r\n\r\n    useEffect(() => {\r\n    const url=\"https://newsapi.org/v2/top-headlines?country=us&q=covid&apiKey=\"+apikey;\r\n    fetch(url)\r\n    .then((response)=>response.json())\r\n    .then((data)=> {\r\n            setDataNews(data.articles);\r\n        })\r\n    }, [])\r\n\r\nreturn (\r\n   <div className =\"news\">\r\n     {\r\n         \r\n         dataNews.map((data)=>(\r\n         <div className=\"breaknews\">\r\n         <img src={data.urlToImage} />\r\n         <div className=\"new\">\r\n         <h3><a href= {data.url} >{data.title}</a></h3>\r\n         <p>{data.content}</p>\r\n         \r\n         <div className=\"info\">\r\n         <p>Source : {data.source.name}</p>\r\n         <p>Published {data.publishedAt}</p>\r\n         </div>\r\n\r\n         </div>\r\n         </div>\r\n         ))}\r\n   </div>  \r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport numeral from \"numeral\";\r\nimport \"./Infobox.css\";\r\nfunction Infobox({title,total,today}) {\r\n    return (\r\n\r\n        <div className=\"card-txt\">\r\n        <p>{title}</p>\r\n        <h4><b>+ {numeral(today).format('0.0a')}</b></h4>\r\n        <p>Total :{numeral(total).format('0.0a')}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Infobox","import React from 'react';\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\"\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\n\r\nfunction Table({tableInfo}) {  \r\n\r\nconst corona = [ ...tableInfo ];\r\nconst columns = [{\r\n    dataField: 'country',\r\n    text: 'Country'\r\n  }, {\r\n    dataField: 'cases',\r\n    text: 'Cases',\r\n    sort: true,\r\n    formatter: (cell) => {\r\n        let casesObj = cell;\r\n        if (typeof cell !== '') {\r\n          casesObj = numeral(cell).format('0,0');\r\n        }\r\n        return casesObj\r\n    }\r\n  }, {\r\n    dataField: 'deaths',\r\n    text: 'Deaths',\r\n    sort: true,\r\n    formatter: (cell) => {\r\n        let deathsObj = cell;\r\n        if (typeof cell !== '') {\r\n          deathsObj = numeral(cell).format('0,0');\r\n        }\r\n        return deathsObj\r\n    }\r\n  },{\r\n    dataField: 'recovered',\r\n    text: 'Recovereds',\r\n    sort: true,\r\n    formatter: (cell) => {\r\n        let recoveredObj = cell;\r\n        if (typeof cell !== '') {\r\n          recoveredObj = numeral(cell).format('0,0');\r\n        }\r\n        return recoveredObj\r\n    }\r\n  }];\r\n\r\n//console.log(corona)\r\nreturn (\r\n    <BootstrapTable classes=\"react-bootstrap-table\" keyField='id' data={ corona } columns={ columns }/>\r\n\r\n)  \r\n}\r\n\r\nexport default Table;","import React from \"react\"\r\nimport \"./Map.css\"\r\nimport {MapContainer , TileLayer, Popup, Circle} from \"react-leaflet\"\r\n\r\nfunction MyMap({center,zoom, data}) {\r\n  const redOptions = { color: 'red', fillColor: 'red', fillOpacity: 0.5 }\r\n  return (\r\n    <MapContainer \r\n    className=\"map\" \r\n    center={center} \r\n    zoom={zoom} \r\n    scrollWheelZoom={false}\r\n    >\r\n    <TileLayer\r\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n  />\r\n  {data.map((country) => (\r\n\r\n     <Circle \r\n     center={[country.countryInfo.lat, country.countryInfo.long]} \r\n     pathOptions={redOptions} \r\n     radius={Math.sqrt(country.cases)*200}>\r\n    <Popup >\r\n            <div className=\"info-name\">{country.country}</div>\r\n            <div className=\"info-cases\">{country.cases} Confirmed Cases </div>\r\n            <div className=\"info-deaths\">{country.deaths} Deaths</div>\r\n            <div className=\"info-recovered\">{country.recovered} Recovereds</div>\r\n    </Popup>\r\n    </Circle>\r\n  ))}  \r\n\r\n</MapContainer>\r\n  );\r\n}\r\nexport default MyMap;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport \"./Chart.css\";\r\nfunction Chart({dataCountry, country}) {\r\n   \r\n    const {cases,deaths} = dataCountry\r\n\r\n    const xCases = [];\r\n    const yCases = [];\r\n\r\n    const xDeaths = [];\r\n    const yDeaths = [];\r\n\r\n\r\n    for (let date in cases) {\r\n\r\n        xCases.push(date);\r\n        yCases.push(cases[date]);\r\n    } \r\n  \r\n    for (let date in deaths) {\r\n\r\n        xDeaths.push(date);\r\n        yDeaths.push(deaths[date]);\r\n    } \r\n    \r\n\r\n    /*w'll try to put dates in array and value cases in array then affet\r\n    them to the data */\r\n\r\n    return (\r\n        <div className=\"app_chart\">\r\n        <div>\r\n           <h3>{country} Situation</h3> \r\n           \r\n            <Line width=\"312px\" height=\"250px\"\r\n               data= {\r\n                    {\r\n                   labels:xCases,\r\n                   datasets:[\r\n                       {\r\n                           label: \"Cases\",\r\n                           data: yCases,\r\n                           backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n         \r\n                       }\r\n\r\n                   ]\r\n                   \r\n                }\r\n               }\r\n            />\r\n            </div>\r\n            <div>\r\n            <h3>{country} Situation</h3>\r\n            <Line width=\"312px\" height=\"250px\"\r\n            data= {\r\n                 {\r\n                labels:xCases,\r\n                datasets:[\r\n                 {\r\n                     label: \"Deaths\",\r\n                     data: yDeaths,\r\n                     backgroundColor: 'rgb(174, 2, 1)',\r\n\r\n                 }\r\n\r\n                ]\r\n                \r\n             }\r\n            }\r\n         />\r\n\r\n         </div>\r\n\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from \"react\"\r\nimport  \"./App.css\"\r\nimport InfoBox from './Infobox';\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport Infobox from \"./Infobox\";\r\nimport Table from \"./Table\"\r\nimport MyMap from \"./MyMap\";\r\nimport Chart from \"./Chart\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nfunction Stats() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [countryInfo, setCountryinfo] = useState([]);\r\n  const [tableData,setTableData] = useState([]);\r\n  const [mapData,setMapData] = useState([]);\r\n  const [mapCenter,setMapCenter] = useState([34.80746,-40.4796])\r\n  const [mapZoom,setMapZoom] = useState(3);\r\n  const [chartData,setChartData] = useState({});\r\n  const [countryChart,setCountryChart] = useState(\"\")\r\n  const [countryUrl,setCountryUrl] = useState(\"Worldwide\")\r\n  const [periodeUrl,setPeriodeUrl] = useState(\"all\")\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setCountryinfo(data)\r\n    })\r\n\r\n  },[])\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const countries = data.map(country => ({\r\n        name: country.country\r\n      }));\r\n      setCountries(countries);\r\n      setMapData(data);\r\n      setTableData(data);\r\n    });\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n     fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n     .then((response)=>response.json())\r\n     .then((data) => {\r\n        setChartData(data)\r\n        setCountryChart(\"Worldwide\")\r\n     })\r\n   \r\n   },[])\r\n\r\n   const onPeriodChange = async (evt) => {\r\n    const periode = evt.target.value;\r\n    setPeriodeUrl(periode);\r\n    const url2= countryUrl === 'Worldwide'? \"https://disease.sh/v3/covid-19/historical/all?lastdays=\"+periode :\"https://disease.sh/v3/covid-19/historical/\"+countryUrl+\"?lastdays=\"+periode;\r\n    await fetch(url2)\r\n   .then((response) => response.json())\r\n   .then((data) => {\r\n     if(url2 === \"https://disease.sh/v3/covid-19/historical/\"+countryUrl+\"?lastdays=\"+periode) {\r\n       setChartData(data.timeline);\r\n       setCountryChart(countryUrl);\r\n     }\r\n     else {\r\n       setChartData(data)\r\n       setCountryChart(\"Worldwide\")\r\n     }\r\n   })\r\n\r\n  }\r\n   const onCountryChange = async(evt) => {\r\n     \r\n      const country= evt.target.value;\r\n      setCountryUrl(country)\r\n      const url= country ==='Worldwide' ? \"https://disease.sh/v3/covid-19/all\" : \"https://disease.sh/v3/covid-19/countries/\"+country\r\n      /* for infoboxes*/ \r\n      await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data)=> {\r\n        setCountryinfo(data);\r\n       // setMapCenter([data.countryInfo.lat,data.countryInfo.long]);\r\n        setMapZoom(3);\r\n      });\r\n      \r\n      /* for charts */\r\n      const url2= country === 'Worldwide'? \"https://disease.sh/v3/covid-19/historical/all?lastdays=\"+periodeUrl :\"https://disease.sh/v3/covid-19/historical/\"+country+\"?lastdays=\"+periodeUrl;\r\n      await fetch(url2)\r\n     .then((response) => response.json())\r\n     .then((data) => {\r\n       if(url2 === \"https://disease.sh/v3/covid-19/historical/\"+country+\"?lastdays=\"+periodeUrl) {\r\n         setChartData(data.timeline);\r\n         setCountryChart(country);\r\n       }\r\n       else {\r\n         setChartData(data)\r\n         setCountryChart(\"Worldwide\")\r\n       }\r\n     })\r\n   \r\n    };\r\n  return (\r\n    <div>\r\n    <h3>Covid-19 Tracker</h3>\r\n\r\n    <div className=\"container\">\r\n    <div className=\"left_side\">\r\n      <select onChange={onCountryChange}>\r\n      <option> Worldwide</option>\r\n      {countries.map((country) => (\r\n        <option> {country.name}</option>\r\n      ))}\r\n     </select>\r\n    { /* InfoBox */}\r\n    <div className=\"app__cards\">\r\n      \r\n    <div className=\"cases\">\r\n      <Infobox title=\" Cases\" \r\n              total={countryInfo.cases}\r\n              today={countryInfo.todayCases}\r\n              />\r\n    </div>\r\n    <div className=\"recovered\">\r\n      <Infobox title=\" Recovered\" \r\n              total={countryInfo.recovered}\r\n              today={countryInfo.todayRecovered}\r\n              />\r\n       </div>       \r\n      <div className=\"deaths\">\r\n      <Infobox title=\" Deaths\" \r\n              total={countryInfo.deaths}\r\n              today={countryInfo.todayDeaths}\r\n              />\r\n        </div>\r\n\r\n    </div>   \r\n    { /* Graph */}\r\n    \r\n    <select onChange={onPeriodChange}>\r\n    <option value=\"all\"> touete la période</option>\r\n    <option value=\"7\"> 1 semaine</option>\r\n    <option value=\"15\"> 2 semaines</option>\r\n    <option value=\"30\"> 30 jours</option>\r\n    </select>    \r\n      \r\n    <Chart dataCountry={chartData} country={countryChart}/>\r\n\r\n\t</div>\r\n\t\r\n    <div className=\"right_side\">\r\n     { /* Table */}\r\n    <Table tableInfo= {tableData}/> \r\n    </div>\r\n    \r\n    { /* Map */}\r\n  <div className=\"map_container\">   \r\n    <MyMap center={mapCenter} zoom={mapZoom} data={mapData}/>\r\n    \r\n    </div>\r\n    \r\n    </div>\r\n    </div>\r\n\r\n   \r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","export default __webpack_public_path__ + \"static/media/symptoms.d425b2d2.jpg\";","export default __webpack_public_path__ + \"static/media/prevention.fbf59ed9.jpg\";","export default __webpack_public_path__ + \"static/media/treatment.fba45536.jpg\";","import React from 'react';\r\nimport \"./Info.css\";\r\nimport sypt from './symptoms.jpg'; // relative path to image \r\nimport prevent from './prevention.jpg'; // relative path to image \r\nimport treat from './treatment.jpg'; // relative path to image \r\n\r\nfunction Info() {\r\n    return (\r\n        <div className=\"cards\">\r\n        <div className=\"card\">\r\n        <img src={sypt} style={{width:\"100%\"}}/>\r\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/question-and-answers-hub/q-a-detail/coronavirus-disease-covid-19#:~:text=symptoms\">\r\n        <div className=\"container\">\r\n          <h4><b>SYMPTOMS</b></h4> \r\n        </div>\r\n        </a>\r\n       </div>\r\n       \r\n       <div className=\"card\">\r\n        <img src={prevent} style={{width:\"100%\"}}/>\r\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public\">\r\n        <div className=\"container\">\r\n          <h4><b>PREVENTION</b></h4> \r\n        </div>\r\n        </a>\r\n       </div>\r\n\r\n       <div className=\"card\">\r\n        <img src={treat} style={{width:\"100%\"}}/>\r\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/question-and-answers-hub/q-a-detail/coronavirus-disease-covid-19#:~:text=protect\">\r\n        <div className=\"container\">\r\n          <h4><b>TREATMENTS</b></h4> \r\n        </div>\r\n        </a>\r\n       </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Info;","import React, {useState, useEffect} from \"react\"\r\nimport  \"./App.css\";\r\nimport News from \"./News\";\r\nimport Stats from \"./Stats\";\r\nimport Info from \"./Info\";\r\n\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n\r\n    <Router>\r\n    <div className=\"navigation\">\r\n    <div className=\"logo\">\r\n      <h3> COVID-19 </h3>\r\n    </div>\r\n    <ul className=\"menu\">\r\n\t\t  <li><Link to=\"/\">Stats </Link></li>\r\n\t\t  <li><Link to=\"/News\">Top News </Link></li>\r\n\t\t  <li><Link to=\"/Info\">Health information</Link></li>\r\n  \t</ul>\r\n    </div>\r\n\r\n     <Route path=\"/\" exact component={Stats} />\r\n     <Route path=\"/News\" exact component={News} />\r\n     <Route path=\"/Info\" exact component={Info} />\r\n     \r\n    </Router>\r\n    </div>\r\n\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}